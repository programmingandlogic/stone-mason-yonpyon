/*
 * File: StoneMasonKarel.java
 * --------------------------
 * The StoneMasonKarel subclass as it appears here does nothing.
 * When you finish writing it, it should solve the "repair the quad"
 * problem from Assignment 1.  In addition to editing the program,
 * you should be sure to edit this comment so that it no longer
 * indicates that the program does nothing.
 */

import stanford.karel.*;

public class StoneMasonKarel extends SuperKarel {

//main program to repair columns
	public void run(){
		checkCurrentForFix();
		moveFour();
		while(frontIsClear()){
		FixAndMove();
		}
		checkFinalColumn();
	}
	
//checks the current/start column for repairs
	private void checkCurrentForFix(){
		turnLeft();
		while(frontIsClear()){
			if(beepersPresent()){
				move();

			}
			else{
				putBeeper();
			}
		}
		checkLast();
		turnAround();
		while(frontIsClear()){
			move();
			}
		turnLeft();
	}
	
		

//moves for spaces for the next column
	private void moveFour(){
		move();
		move();
		move();
		move();
	}
	
//fixes column and moves to next column as long there is no wall in front	
	private void FixAndMove(){
		checkCurrentForFix();
		moveFour();
		
	}
	
//checks final column for repaires and stands at the lower right corner facing foward
	private void checkFinalColumn(){
		checkCurrentForFix();
		
	}
	
	private void checkLast(){
		if(noBeepersPresent()){
			putBeeper();
		}
		
	}
